{
    // Place your beets workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    "New Functional Component": {
        "scope": "javascript,typescript,typescriptreact",
        "prefix": "nfc",
        "body": [
            "interface $1Props {}",
            "",
            "const $1: React.FC<$1Props> = (props: $1Props) => {",
            "    return null;",
            "};",
            "",
            "export { $1 };",
            ""
        ],
        "description": "New Functional Component"
    },
    "New Immutable Record": {
        "prefix": "nir",
        "body": [
            "import { Record } from \"immutable\";",
            "import { BaseRecord } from \"models/base-record\";",
            "import { makeDefaultValues } from \"utils/core-utils\";",
            "import { RecordParams } from \"types/record-params\";",
            "",
            "const defaultValues = makeDefaultValues<$1>({",
            "});",
            "",
            "class $1Record extends BaseRecord(Record(defaultValues)) implements $1 {",
            "    public static defaultValues: $1 = defaultValues;",
            "",
            "    constructor(values?: RecordParams<$1Record>) {",
            "        values = values ?? defaultValues;",
            "",
            "        if (values instanceof $1Record) {",
            "            values = values.toPOJO();",
            "        }",
            "",
            "        super(values);",
            "    }",
            "}",
            "",
            "export { $1Record };",
            ""
        ],
        "description": "New Immutable Record"
    }
}
