/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        get: {
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/files": {
        get: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.files.created_on"];
                    created_by_id?: parameters["rowFilter.files.created_by_id"];
                    deleted_on?: parameters["rowFilter.files.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.files.deleted_by_id"];
                    updated_on?: parameters["rowFilter.files.updated_on"];
                    updated_by_id?: parameters["rowFilter.files.updated_by_id"];
                    id?: parameters["rowFilter.files.id"];
                    bucket_id?: parameters["rowFilter.files.bucket_id"];
                    description?: parameters["rowFilter.files.description"];
                    name?: parameters["rowFilter.files.name"];
                    path?: parameters["rowFilter.files.path"];
                    size?: parameters["rowFilter.files.size"];
                    type?: parameters["rowFilter.files.type"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["files"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** files */
                    files?: definitions["files"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.files.created_on"];
                    created_by_id?: parameters["rowFilter.files.created_by_id"];
                    deleted_on?: parameters["rowFilter.files.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.files.deleted_by_id"];
                    updated_on?: parameters["rowFilter.files.updated_on"];
                    updated_by_id?: parameters["rowFilter.files.updated_by_id"];
                    id?: parameters["rowFilter.files.id"];
                    bucket_id?: parameters["rowFilter.files.bucket_id"];
                    description?: parameters["rowFilter.files.description"];
                    name?: parameters["rowFilter.files.name"];
                    path?: parameters["rowFilter.files.path"];
                    size?: parameters["rowFilter.files.size"];
                    type?: parameters["rowFilter.files.type"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.files.created_on"];
                    created_by_id?: parameters["rowFilter.files.created_by_id"];
                    deleted_on?: parameters["rowFilter.files.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.files.deleted_by_id"];
                    updated_on?: parameters["rowFilter.files.updated_on"];
                    updated_by_id?: parameters["rowFilter.files.updated_by_id"];
                    id?: parameters["rowFilter.files.id"];
                    bucket_id?: parameters["rowFilter.files.bucket_id"];
                    description?: parameters["rowFilter.files.description"];
                    name?: parameters["rowFilter.files.name"];
                    path?: parameters["rowFilter.files.path"];
                    size?: parameters["rowFilter.files.size"];
                    type?: parameters["rowFilter.files.type"];
                };
                body: {
                    /** files */
                    files?: definitions["files"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/instruments": {
        get: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.instruments.created_on"];
                    created_by_id?: parameters["rowFilter.instruments.created_by_id"];
                    deleted_on?: parameters["rowFilter.instruments.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.instruments.deleted_by_id"];
                    updated_on?: parameters["rowFilter.instruments.updated_on"];
                    updated_by_id?: parameters["rowFilter.instruments.updated_by_id"];
                    id?: parameters["rowFilter.instruments.id"];
                    curve?: parameters["rowFilter.instruments.curve"];
                    file_id?: parameters["rowFilter.instruments.file_id"];
                    name?: parameters["rowFilter.instruments.name"];
                    release?: parameters["rowFilter.instruments.release"];
                    root_note?: parameters["rowFilter.instruments.root_note"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["instruments"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** instruments */
                    instruments?: definitions["instruments"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.instruments.created_on"];
                    created_by_id?: parameters["rowFilter.instruments.created_by_id"];
                    deleted_on?: parameters["rowFilter.instruments.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.instruments.deleted_by_id"];
                    updated_on?: parameters["rowFilter.instruments.updated_on"];
                    updated_by_id?: parameters["rowFilter.instruments.updated_by_id"];
                    id?: parameters["rowFilter.instruments.id"];
                    curve?: parameters["rowFilter.instruments.curve"];
                    file_id?: parameters["rowFilter.instruments.file_id"];
                    name?: parameters["rowFilter.instruments.name"];
                    release?: parameters["rowFilter.instruments.release"];
                    root_note?: parameters["rowFilter.instruments.root_note"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.instruments.created_on"];
                    created_by_id?: parameters["rowFilter.instruments.created_by_id"];
                    deleted_on?: parameters["rowFilter.instruments.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.instruments.deleted_by_id"];
                    updated_on?: parameters["rowFilter.instruments.updated_on"];
                    updated_by_id?: parameters["rowFilter.instruments.updated_by_id"];
                    id?: parameters["rowFilter.instruments.id"];
                    curve?: parameters["rowFilter.instruments.curve"];
                    file_id?: parameters["rowFilter.instruments.file_id"];
                    name?: parameters["rowFilter.instruments.name"];
                    release?: parameters["rowFilter.instruments.release"];
                    root_note?: parameters["rowFilter.instruments.root_note"];
                };
                body: {
                    /** instruments */
                    instruments?: definitions["instruments"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/pgmigrations": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.pgmigrations.id"];
                    name?: parameters["rowFilter.pgmigrations.name"];
                    run_on?: parameters["rowFilter.pgmigrations.run_on"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["pgmigrations"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** pgmigrations */
                    pgmigrations?: definitions["pgmigrations"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.pgmigrations.id"];
                    name?: parameters["rowFilter.pgmigrations.name"];
                    run_on?: parameters["rowFilter.pgmigrations.run_on"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.pgmigrations.id"];
                    name?: parameters["rowFilter.pgmigrations.name"];
                    run_on?: parameters["rowFilter.pgmigrations.run_on"];
                };
                body: {
                    /** pgmigrations */
                    pgmigrations?: definitions["pgmigrations"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/projects": {
        get: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.projects.created_on"];
                    created_by_id?: parameters["rowFilter.projects.created_by_id"];
                    deleted_on?: parameters["rowFilter.projects.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.projects.deleted_by_id"];
                    updated_on?: parameters["rowFilter.projects.updated_on"];
                    updated_by_id?: parameters["rowFilter.projects.updated_by_id"];
                    id?: parameters["rowFilter.projects.id"];
                    bpm?: parameters["rowFilter.projects.bpm"];
                    name?: parameters["rowFilter.projects.name"];
                    swing?: parameters["rowFilter.projects.swing"];
                    volume?: parameters["rowFilter.projects.volume"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["projects"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** projects */
                    projects?: definitions["projects"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.projects.created_on"];
                    created_by_id?: parameters["rowFilter.projects.created_by_id"];
                    deleted_on?: parameters["rowFilter.projects.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.projects.deleted_by_id"];
                    updated_on?: parameters["rowFilter.projects.updated_on"];
                    updated_by_id?: parameters["rowFilter.projects.updated_by_id"];
                    id?: parameters["rowFilter.projects.id"];
                    bpm?: parameters["rowFilter.projects.bpm"];
                    name?: parameters["rowFilter.projects.name"];
                    swing?: parameters["rowFilter.projects.swing"];
                    volume?: parameters["rowFilter.projects.volume"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.projects.created_on"];
                    created_by_id?: parameters["rowFilter.projects.created_by_id"];
                    deleted_on?: parameters["rowFilter.projects.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.projects.deleted_by_id"];
                    updated_on?: parameters["rowFilter.projects.updated_on"];
                    updated_by_id?: parameters["rowFilter.projects.updated_by_id"];
                    id?: parameters["rowFilter.projects.id"];
                    bpm?: parameters["rowFilter.projects.bpm"];
                    name?: parameters["rowFilter.projects.name"];
                    swing?: parameters["rowFilter.projects.swing"];
                    volume?: parameters["rowFilter.projects.volume"];
                };
                body: {
                    /** projects */
                    projects?: definitions["projects"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/rpc/update_files_auditable_fields": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/rpc/update_instruments_auditable_fields": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/rpc/update_projects_auditable_fields": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/rpc/update_track_section_steps_auditable_fields": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/track_section_steps": {
        get: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.track_section_steps.created_on"];
                    created_by_id?: parameters["rowFilter.track_section_steps.created_by_id"];
                    deleted_on?: parameters["rowFilter.track_section_steps.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.track_section_steps.deleted_by_id"];
                    updated_on?: parameters["rowFilter.track_section_steps.updated_on"];
                    updated_by_id?: parameters["rowFilter.track_section_steps.updated_by_id"];
                    id?: parameters["rowFilter.track_section_steps.id"];
                    file_id?: parameters["rowFilter.track_section_steps.file_id"];
                    index?: parameters["rowFilter.track_section_steps.index"];
                    track_section_id?: parameters["rowFilter.track_section_steps.track_section_id"];
                    note?: parameters["rowFilter.track_section_steps.note"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["track_section_steps"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** track_section_steps */
                    track_section_steps?: definitions["track_section_steps"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.track_section_steps.created_on"];
                    created_by_id?: parameters["rowFilter.track_section_steps.created_by_id"];
                    deleted_on?: parameters["rowFilter.track_section_steps.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.track_section_steps.deleted_by_id"];
                    updated_on?: parameters["rowFilter.track_section_steps.updated_on"];
                    updated_by_id?: parameters["rowFilter.track_section_steps.updated_by_id"];
                    id?: parameters["rowFilter.track_section_steps.id"];
                    file_id?: parameters["rowFilter.track_section_steps.file_id"];
                    index?: parameters["rowFilter.track_section_steps.index"];
                    track_section_id?: parameters["rowFilter.track_section_steps.track_section_id"];
                    note?: parameters["rowFilter.track_section_steps.note"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.track_section_steps.created_on"];
                    created_by_id?: parameters["rowFilter.track_section_steps.created_by_id"];
                    deleted_on?: parameters["rowFilter.track_section_steps.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.track_section_steps.deleted_by_id"];
                    updated_on?: parameters["rowFilter.track_section_steps.updated_on"];
                    updated_by_id?: parameters["rowFilter.track_section_steps.updated_by_id"];
                    id?: parameters["rowFilter.track_section_steps.id"];
                    file_id?: parameters["rowFilter.track_section_steps.file_id"];
                    index?: parameters["rowFilter.track_section_steps.index"];
                    track_section_id?: parameters["rowFilter.track_section_steps.track_section_id"];
                    note?: parameters["rowFilter.track_section_steps.note"];
                };
                body: {
                    /** track_section_steps */
                    track_section_steps?: definitions["track_section_steps"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/rpc/update_track_sections_auditable_fields": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/rpc/update_users_auditable_fields": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/rpc/update_tracks_auditable_fields": {
        post: {
            parameters: {
                body: {
                    args: { [key: string]: unknown };
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferParams"];
                };
            };
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/track_sections": {
        get: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.track_sections.created_on"];
                    created_by_id?: parameters["rowFilter.track_sections.created_by_id"];
                    deleted_on?: parameters["rowFilter.track_sections.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.track_sections.deleted_by_id"];
                    updated_on?: parameters["rowFilter.track_sections.updated_on"];
                    updated_by_id?: parameters["rowFilter.track_sections.updated_by_id"];
                    id?: parameters["rowFilter.track_sections.id"];
                    index?: parameters["rowFilter.track_sections.index"];
                    step_count?: parameters["rowFilter.track_sections.step_count"];
                    track_id?: parameters["rowFilter.track_sections.track_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["track_sections"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** track_sections */
                    track_sections?: definitions["track_sections"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.track_sections.created_on"];
                    created_by_id?: parameters["rowFilter.track_sections.created_by_id"];
                    deleted_on?: parameters["rowFilter.track_sections.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.track_sections.deleted_by_id"];
                    updated_on?: parameters["rowFilter.track_sections.updated_on"];
                    updated_by_id?: parameters["rowFilter.track_sections.updated_by_id"];
                    id?: parameters["rowFilter.track_sections.id"];
                    index?: parameters["rowFilter.track_sections.index"];
                    step_count?: parameters["rowFilter.track_sections.step_count"];
                    track_id?: parameters["rowFilter.track_sections.track_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.track_sections.created_on"];
                    created_by_id?: parameters["rowFilter.track_sections.created_by_id"];
                    deleted_on?: parameters["rowFilter.track_sections.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.track_sections.deleted_by_id"];
                    updated_on?: parameters["rowFilter.track_sections.updated_on"];
                    updated_by_id?: parameters["rowFilter.track_sections.updated_by_id"];
                    id?: parameters["rowFilter.track_sections.id"];
                    index?: parameters["rowFilter.track_sections.index"];
                    step_count?: parameters["rowFilter.track_sections.step_count"];
                    track_id?: parameters["rowFilter.track_sections.track_id"];
                };
                body: {
                    /** track_sections */
                    track_sections?: definitions["track_sections"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/tracks": {
        get: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.tracks.created_on"];
                    created_by_id?: parameters["rowFilter.tracks.created_by_id"];
                    deleted_on?: parameters["rowFilter.tracks.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.tracks.deleted_by_id"];
                    updated_on?: parameters["rowFilter.tracks.updated_on"];
                    updated_by_id?: parameters["rowFilter.tracks.updated_by_id"];
                    id?: parameters["rowFilter.tracks.id"];
                    index?: parameters["rowFilter.tracks.index"];
                    name?: parameters["rowFilter.tracks.name"];
                    mute?: parameters["rowFilter.tracks.mute"];
                    solo?: parameters["rowFilter.tracks.solo"];
                    pan?: parameters["rowFilter.tracks.pan"];
                    project_id?: parameters["rowFilter.tracks.project_id"];
                    volume?: parameters["rowFilter.tracks.volume"];
                    instrument_id?: parameters["rowFilter.tracks.instrument_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["tracks"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** tracks */
                    tracks?: definitions["tracks"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.tracks.created_on"];
                    created_by_id?: parameters["rowFilter.tracks.created_by_id"];
                    deleted_on?: parameters["rowFilter.tracks.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.tracks.deleted_by_id"];
                    updated_on?: parameters["rowFilter.tracks.updated_on"];
                    updated_by_id?: parameters["rowFilter.tracks.updated_by_id"];
                    id?: parameters["rowFilter.tracks.id"];
                    index?: parameters["rowFilter.tracks.index"];
                    name?: parameters["rowFilter.tracks.name"];
                    mute?: parameters["rowFilter.tracks.mute"];
                    solo?: parameters["rowFilter.tracks.solo"];
                    pan?: parameters["rowFilter.tracks.pan"];
                    project_id?: parameters["rowFilter.tracks.project_id"];
                    volume?: parameters["rowFilter.tracks.volume"];
                    instrument_id?: parameters["rowFilter.tracks.instrument_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.tracks.created_on"];
                    created_by_id?: parameters["rowFilter.tracks.created_by_id"];
                    deleted_on?: parameters["rowFilter.tracks.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.tracks.deleted_by_id"];
                    updated_on?: parameters["rowFilter.tracks.updated_on"];
                    updated_by_id?: parameters["rowFilter.tracks.updated_by_id"];
                    id?: parameters["rowFilter.tracks.id"];
                    index?: parameters["rowFilter.tracks.index"];
                    name?: parameters["rowFilter.tracks.name"];
                    mute?: parameters["rowFilter.tracks.mute"];
                    solo?: parameters["rowFilter.tracks.solo"];
                    pan?: parameters["rowFilter.tracks.pan"];
                    project_id?: parameters["rowFilter.tracks.project_id"];
                    volume?: parameters["rowFilter.tracks.volume"];
                    instrument_id?: parameters["rowFilter.tracks.instrument_id"];
                };
                body: {
                    /** tracks */
                    tracks?: definitions["tracks"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/users": {
        get: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.users.created_on"];
                    created_by_id?: parameters["rowFilter.users.created_by_id"];
                    deleted_on?: parameters["rowFilter.users.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.users.deleted_by_id"];
                    updated_on?: parameters["rowFilter.users.updated_on"];
                    updated_by_id?: parameters["rowFilter.users.updated_by_id"];
                    id?: parameters["rowFilter.users.id"];
                    email?: parameters["rowFilter.users.email"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["users"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** users */
                    users?: definitions["users"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.users.created_on"];
                    created_by_id?: parameters["rowFilter.users.created_by_id"];
                    deleted_on?: parameters["rowFilter.users.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.users.deleted_by_id"];
                    updated_on?: parameters["rowFilter.users.updated_on"];
                    updated_by_id?: parameters["rowFilter.users.updated_by_id"];
                    id?: parameters["rowFilter.users.id"];
                    email?: parameters["rowFilter.users.email"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    created_on?: parameters["rowFilter.users.created_on"];
                    created_by_id?: parameters["rowFilter.users.created_by_id"];
                    deleted_on?: parameters["rowFilter.users.deleted_on"];
                    deleted_by_id?: parameters["rowFilter.users.deleted_by_id"];
                    updated_on?: parameters["rowFilter.users.updated_on"];
                    updated_by_id?: parameters["rowFilter.users.updated_by_id"];
                    id?: parameters["rowFilter.users.id"];
                    email?: parameters["rowFilter.users.email"];
                };
                body: {
                    /** users */
                    users?: definitions["users"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
}

export interface definitions {
    files: {
        created_on?: string;
        created_by_id?: string;
        deleted_on?: string;
        deleted_by_id?: string;
        updated_on?: string;
        updated_by_id?: string;
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        /**
         * Note:
         * This is a Foreign Key to `buckets.id`.<fk table='buckets' column='id'/>
         */
        bucket_id: string;
        description?: string;
        name: string;
        path: string;
        size?: number;
        type: string;
    };
    instruments: {
        created_on?: string;
        created_by_id?: string;
        deleted_on?: string;
        deleted_by_id?: string;
        updated_on?: string;
        updated_by_id?: string;
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        curve: "exponential" | "linear";
        /**
         * Note:
         * This is a Foreign Key to `files.id`.<fk table='files' column='id'/>
         */
        file_id: string;
        name: string;
        release?: number;
        root_note?: string;
    };
    pgmigrations: {
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        name: string;
        run_on: string;
    };
    projects: {
        created_on?: string;
        created_by_id?: string;
        deleted_on?: string;
        deleted_by_id?: string;
        updated_on?: string;
        updated_by_id?: string;
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        bpm: number;
        name: string;
        swing: number;
        volume: number;
    };
    track_section_steps: {
        created_on?: string;
        created_by_id?: string;
        deleted_on?: string;
        deleted_by_id?: string;
        updated_on?: string;
        updated_by_id?: string;
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        /**
         * Note:
         * This is a Foreign Key to `files.id`.<fk table='files' column='id'/>
         */
        file_id?: string;
        index: number;
        /**
         * Note:
         * This is a Foreign Key to `track_sections.id`.<fk table='track_sections' column='id'/>
         */
        track_section_id: string;
        note?: string;
    };
    track_sections: {
        created_on?: string;
        created_by_id?: string;
        deleted_on?: string;
        deleted_by_id?: string;
        updated_on?: string;
        updated_by_id?: string;
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        index: number;
        step_count: number;
        /**
         * Note:
         * This is a Foreign Key to `tracks.id`.<fk table='tracks' column='id'/>
         */
        track_id: string;
    };
    tracks: {
        created_on?: string;
        created_by_id?: string;
        deleted_on?: string;
        deleted_by_id?: string;
        updated_on?: string;
        updated_by_id?: string;
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        index: number;
        name: string;
        mute: boolean;
        solo: boolean;
        pan: number;
        /**
         * Note:
         * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
         */
        project_id: string;
        volume: number;
        /**
         * Note:
         * This is a Foreign Key to `instruments.id`.<fk table='instruments' column='id'/>
         */
        instrument_id?: string;
    };
    users: {
        created_on?: string;
        created_by_id?: string;
        deleted_on?: string;
        deleted_by_id?: string;
        updated_on?: string;
        updated_by_id?: string;
        /**
         * Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        email: string;
    };
}

export interface parameters {
    /** files */
    "body.files": definitions["files"];
    /** instruments */
    "body.instruments": definitions["instruments"];
    /** pgmigrations */
    "body.pgmigrations": definitions["pgmigrations"];
    /** projects */
    "body.projects": definitions["projects"];
    /** track_section_steps */
    "body.track_section_steps": definitions["track_section_steps"];
    /** track_sections */
    "body.track_sections": definitions["track_sections"];
    /** tracks */
    "body.tracks": definitions["tracks"];
    /** users */
    "body.users": definitions["users"];
    "rowFilter.files.created_by_id": string;
    "rowFilter.files.created_on": string;
    "rowFilter.files.deleted_by_id": string;
    "rowFilter.files.bucket_id": string;
    "rowFilter.files.deleted_on": string;
    "rowFilter.files.description": string;
    "rowFilter.files.id": string;
    "rowFilter.files.name": string;
    "rowFilter.files.path": string;
    "rowFilter.files.size": string;
    "rowFilter.files.type": string;
    "rowFilter.files.updated_by_id": string;
    "rowFilter.files.updated_on": string;
    "rowFilter.instruments.created_by_id": string;
    "rowFilter.instruments.created_on": string;
    "rowFilter.instruments.deleted_by_id": string;
    "rowFilter.instruments.deleted_on": string;
    "rowFilter.instruments.curve": string;
    "rowFilter.instruments.file_id": string;
    "rowFilter.instruments.id": string;
    "rowFilter.instruments.name": string;
    "rowFilter.instruments.release": string;
    "rowFilter.instruments.root_note": string;
    "rowFilter.instruments.updated_by_id": string;
    "rowFilter.instruments.updated_on": string;
    "rowFilter.pgmigrations.id": string;
    "rowFilter.pgmigrations.name": string;
    "rowFilter.pgmigrations.run_on": string;
    "rowFilter.projects.created_by_id": string;
    "rowFilter.projects.created_on": string;
    "rowFilter.projects.deleted_by_id": string;
    "rowFilter.projects.bpm": string;
    "rowFilter.projects.deleted_on": string;
    "rowFilter.projects.id": string;
    "rowFilter.projects.name": string;
    "rowFilter.projects.swing": string;
    "rowFilter.projects.updated_by_id": string;
    "rowFilter.projects.updated_on": string;
    "rowFilter.projects.volume": string;
    "rowFilter.track_section_steps.created_by_id": string;
    "rowFilter.track_section_steps.created_on": string;
    "rowFilter.track_section_steps.deleted_by_id": string;
    "rowFilter.track_section_steps.deleted_on": string;
    "rowFilter.track_section_steps.file_id": string;
    "rowFilter.track_section_steps.id": string;
    "rowFilter.track_section_steps.index": string;
    "rowFilter.track_section_steps.note": string;
    "rowFilter.track_section_steps.track_section_id": string;
    "rowFilter.track_section_steps.updated_by_id": string;
    "rowFilter.track_section_steps.updated_on": string;
    "rowFilter.track_sections.created_by_id": string;
    "rowFilter.track_sections.created_on": string;
    "rowFilter.track_sections.deleted_by_id": string;
    "rowFilter.track_sections.deleted_on": string;
    "rowFilter.track_sections.id": string;
    "rowFilter.track_sections.index": string;
    "rowFilter.track_sections.step_count": string;
    "rowFilter.track_sections.track_id": string;
    "rowFilter.track_sections.updated_by_id": string;
    "rowFilter.track_sections.updated_on": string;
    "rowFilter.tracks.created_by_id": string;
    "rowFilter.tracks.created_on": string;
    "rowFilter.tracks.deleted_by_id": string;
    "rowFilter.tracks.deleted_on": string;
    "rowFilter.tracks.id": string;
    "rowFilter.tracks.index": string;
    "rowFilter.tracks.mute": string;
    "rowFilter.tracks.instrument_id": string;
    "rowFilter.tracks.name": string;
    "rowFilter.tracks.pan": string;
    "rowFilter.tracks.project_id": string;
    "rowFilter.tracks.solo": string;
    "rowFilter.tracks.updated_by_id": string;
    "rowFilter.tracks.updated_on": string;
    "rowFilter.tracks.volume": string;
    "rowFilter.users.created_by_id": string;
    "rowFilter.users.created_on": string;
    "rowFilter.users.deleted_by_id": string;
    "rowFilter.users.deleted_on": string;
    "rowFilter.users.email": string;
    /** Preference */
    preferParams: "params=single-object";
    "rowFilter.users.id": string;
    /** On Conflict */
    on_conflict: string;
    "rowFilter.users.updated_by_id": string;
    /** Preference */
    preferCount: "count=none";
    "rowFilter.users.updated_on": string;
    /** Ordering */
    order: string;
    /** Limiting and Pagination */
    limit: string;
    /** Limiting and Pagination */
    offset: string;
    /** Preference */
    preferReturn: "return=representation" | "return=minimal" | "return=none";
    /** Limiting and Pagination */
    range: string;
    /** Limiting and Pagination */
    rangeUnit: string;
    /** Filtering Columns */
    select: string;
}

export interface operations {}

export interface external {}
